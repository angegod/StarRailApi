{"version":3,"file":"static/js/295.64b00d7b.chunk.js","mappings":"mBAoIA,QApIa,CAAC,CACVA,KAAK,OACLC,KAAK,CAAC,CACFC,KAAK,UACLD,KAAK,IACLE,SAAQ,GACV,CACED,KAAK,eACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,cACLD,KAAK,MACLE,SAAQ,GACV,CACED,KAAK,mBACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,oBACLD,KAAK,GACLE,SAAQ,GACV,CACED,KAAK,qBACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,qBACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,4BACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,aACLD,KAAK,GACLE,SAAQ,GACV,CACED,KAAK,wBACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,gBACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,sBACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,qBACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,iBACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,iBACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,oBACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,oBACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,cACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,gBACLD,KAAK,KACLE,SAAQ,KAEd,CACEH,KAAK,MACLC,KAAK,CAAC,CACFC,KAAK,UACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,eACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,cACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,mBACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,eACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,oBACLD,KAAK,IACLE,SAAQ,GACV,CACED,KAAK,qBACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,qBACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,4BACLD,KAAK,KACLE,SAAQ,GACV,CACED,KAAK,aACLD,KAAK,IACLE,SAAQ,GACV,CACED,K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","sources":["data/standard.js","data/weight.js","data/AffixName.js","worker/worker2.js","data/combination.js"],"sourcesContent":["let standard=[{\r\n    type:'main',\r\n    data:[{\r\n        name:'HPDelta',\r\n        data:705,\r\n        percent:false\r\n    },{\r\n        name:'HPAddedRatio',\r\n        data:43.2,\r\n        percent:true\r\n    },{\r\n        name:'AttackDelta',\r\n        data:352.8,\r\n        percent:false\r\n    },{\r\n        name:'AttackAddedRatio',\r\n        data:43.2,\r\n        percent:true\r\n    },{\r\n        name:'DefenceAddedRatio',\r\n        data:54,\r\n        percent:true\r\n    },{\r\n        name:'CriticalChanceBase',\r\n        data:32.4,\r\n        percent:true\r\n    },{\r\n        name:'CriticalDamageBase',\r\n        data:64.8,\r\n        percent:true\r\n    },{\r\n        name:'BreakDamageAddedRatioBase',\r\n        data:64.8,\r\n        percent:true\r\n    },{\r\n        name:'SpeedDelta',\r\n        data:25,\r\n        percent:false\r\n    },{\r\n        name:'StatusProbabilityBase',\r\n        data:43.2,\r\n        percent:true\r\n    },{\r\n        name:'IceAddedRatio',\r\n        data:38.8,\r\n        percent:true\r\n    },{\r\n        name:'ImaginaryAddedRatio',\r\n        data:38.8,\r\n        percent:true\r\n    },{\r\n        name:'PhysicalAddedRatio',\r\n        data:38.8,\r\n        percent:true\r\n    },{\r\n        name:'FireAddedRatio',\r\n        data:38.8,\r\n        percent:true\r\n    },{\r\n        name:'WindAddedRatio',\r\n        data:38.8,\r\n        percent:true\r\n    },{\r\n        name:'ThunderAddedRatio',\r\n        data:38.8,\r\n        percent:true\r\n    },{\r\n        name:'QuantumAddedRatio',\r\n        data:38.8,\r\n        percent:true\r\n    },{\r\n        name:'SPRatioBase',\r\n        data:19.4,\r\n        percent:true\r\n    },{\r\n        name:'HealRatioBase',\r\n        data:34.5,\r\n        percent:true\r\n    }]\r\n},{\r\n    type:'sub',\r\n    data:[{\r\n        name:'HPDelta',\r\n        data:42.4,\r\n        percent:false  \r\n    },{\r\n        name:'HPAddedRatio',\r\n        data:4.32,\r\n        percent:true\r\n    },{\r\n        name:'AttackDelta',\r\n        data:21.2,\r\n        percent:false,\r\n    },{\r\n        name:'AttackAddedRatio',\r\n        data:4.32,\r\n        percent:true\r\n    },{\r\n        name:'DefenceDelta',\r\n        data:21.2,\r\n        percent:false\r\n    },{\r\n        name:'DefenceAddedRatio',\r\n        data:5.4,\r\n        percent:true\r\n    },{\r\n        name:'CriticalChanceBase',\r\n        data:3.24,\r\n        percent:true\r\n    },{\r\n        name:'CriticalDamageBase',\r\n        data:6.48,\r\n        percent:true\r\n    },{\r\n        name:'BreakDamageAddedRatioBase',\r\n        data:6.48,\r\n        percent:true\r\n    },{\r\n        name:'SpeedDelta',\r\n        data:2.6,\r\n        percent:false\r\n    },{\r\n        name:'StatusProbabilityBase',\r\n        data:4.32,\r\n        percent:true\r\n    },{\r\n        name:'StatusResistanceBase',\r\n        data:4.32,\r\n        percent:true\r\n    }]\r\n}]\r\n\r\nexport default standard;","let weight={\r\n1: {\r\n    main: [\"hp\"],\r\n    sub: [\"hp\", \"atk\", \"def\", \"spd\", \"crit_rate\", \"crit_dmg\", \"effect_res\", \"effect_hit\", \"break_dmg\"]\r\n},\r\n2: {\r\n    main: [\"atk\"],\r\n    sub: [\"hp\", \"atk\", \"def\", \"spd\", \"crit_rate\", \"crit_dmg\", \"effect_res\", \"effect_hit\", \"break_dmg\"]\r\n},\r\n3: {\r\n    main: [\"atk\", \"hp\", \"def\", \"crit_rate\", \"crit_dmg\", \"heal_rate\", \"effect_hit\"],\r\n    sub: [\"hp\", \"atk\", \"def\", \"spd\", \"crit_rate\", \"crit_dmg\", \"effect_res\", \"effect_hit\", \"break_dmg\"]\r\n},\r\n4: {\r\n    main: [\"atk\", \"hp\", \"def\", \"spd\"],\r\n    sub: [\"hp\", \"atk\", \"def\", \"spd\", \"crit_rate\", \"crit_dmg\", \"effect_res\", \"effect_hit\", \"break_dmg\"]\r\n},\r\n5: {\r\n    main: [\"atk\", \"hp\", \"def\", \"break_dmg\", \"sp_rate\"],\r\n    sub: [\"hp\", \"atk\", \"def\", \"spd\", \"crit_rate\", \"crit_dmg\", \"effect_res\", \"effect_hit\", \"break_dmg\"]\r\n},\r\n6: {\r\n    main: [\"atk\", \"hp\", \"def\", \"physical_dmg\", \"fire_dmg\", \"ice_dmg\", \"lightning_dmg\", \"wind_dmg\", \"quantum_dmg\", \"imaginary_dmg\"],\r\n    sub: [\"hp\", \"atk\", \"def\", \"spd\", \"crit_rate\", \"crit_dmg\", \"effect_res\", \"effect_hit\", \"break_dmg\"]\r\n}};\r\n\r\nexport default weight;","let AffixName=[{\r\n    fieldName:'HPDelta',\r\n    icon:'IconMaxHP',\r\n    type:'hp',\r\n    name:'生命值',\r\n    percent:false,\r\n    range:[34,38,42]\r\n},{\r\n    fieldName:'HPAddedRatio',\r\n    icon:'IconMaxHP',\r\n    type:'hp',\r\n    name:'生命值%數',\r\n    percent:true,\r\n    range:[3.45,3.89,4.32]\r\n},{\r\n    fieldName:'AttackDelta',\r\n    icon:'IconAttack',\r\n    type:'atk',\r\n    name:'攻擊力',\r\n    percent:false,\r\n    range:[17,19,21]\r\n},{\r\n    fieldName:'AttackAddedRatio',\r\n    icon:'IconAttack',\r\n    type:'atk',\r\n    name:'攻擊力%數',\r\n    percent:true,\r\n    range:[3.45,3.89,4.32]\r\n},{\r\n    fieldName:'DefenceDelta',\r\n    icon:'IconDefence',\r\n    type:'def',\r\n    name:'防禦力',\r\n    percent:false,\r\n    range:[17,19,21]\r\n},{\r\n    fieldName:'DefenceAddedRatio',\r\n    icon:'IconDefence',\r\n    type:'def',\r\n    name:'防禦力%數',\r\n    percent:true,\r\n    range:[4.32,4.86,5.4]\r\n},{\r\n    fieldName:'CriticalChanceBase',\r\n    icon:'IconCriticalChance',\r\n    type:'crit_rate',\r\n    name:'暴擊率',\r\n    percent:true,\r\n    range:[2.6,2.9,3.2]\r\n\r\n},{\r\n    fieldName:'CriticalDamageBase',\r\n    icon:'IconCriticalDamage',\r\n    type:'crit_dmg',\r\n    name:'暴擊傷害',\r\n    percent:true,\r\n    range:[5.2,5.8,6.48]\r\n},{\r\n    fieldName:'SpeedDelta',\r\n    icon:'IconSpeed',\r\n    type:'spd',\r\n    name:'速度',\r\n    percent:false,\r\n    range:[2.0,2.3,2.6]\r\n},{\r\n    fieldName:'BreakDamageAddedRatioBase',\r\n    icon:'IconBreakUp',\r\n    type:'break_dmg',\r\n    name:'擊破特攻',\r\n    percent:true,\r\n    range:[5.2,5.8,6.5]\r\n},{\r\n    fieldName:'SPRatioBase',\r\n    icon:'IconEnergyRecovery',\r\n    type:'sp_rate',\r\n    name:'能量恢復效率',\r\n    percent:true\r\n},{\r\n    fieldName:'HealRatioBase',\r\n    icon:'IconHealRatio',\r\n    type:'heal_rate',\r\n    name:'治療加成',\r\n    percent:true\r\n},{\r\n    fieldName:'StatusProbabilityBase',\r\n    icon:'IconStatusProbability',\r\n    type:'effect_hit',\r\n    name:'效果命中',\r\n    percent:true,\r\n    range:[3.45,3.89,4.32]\r\n},{\r\n    fieldName:'StatusResistanceBase',\r\n    icon:'IconStatusResistance',\r\n    type:'effect_res',\r\n    name:'效果抗性',\r\n    percent:true,\r\n    range:[3.45,3.89,4.32]\r\n},{\r\n    fieldName:'PhysicalAddedRatio',\r\n    icon:'IconPhysicalAddedRatio',\r\n    type:'physical_dmg',\r\n    name:'物理屬性傷害提高',\r\n    percent:true\r\n},{\r\n    fieldName:'FireAddedRatio',\r\n    icon:'IconFireAddedRatio',\r\n    type:'fire_dmg',\r\n    name:'火屬性傷害提高',\r\n    percent:true\r\n},{\r\n    fieldName:'IceAddedRatio',\r\n    icon:'IconIceAddedRatio',\r\n    type:'ice_dmg',\r\n    name:'冰屬性傷害提高',\r\n    percent:true\r\n},{\r\n    fieldName:'ThunderAddedRatio',\r\n    icon:'IconThunderAddedRatio',\r\n    type:'lightning_dmg',\r\n    name:'雷屬性傷害提高',\r\n    percent:true\r\n},{\r\n    fieldName:'WindAddedRatio',\r\n    icon:'IconWindAddedRatio',\r\n    type:'wind_dmg',\r\n    name:'風屬性傷害提高',\r\n    percent:true\r\n},{\r\n    fieldName:'QuantumAddedRatio',\r\n    icon:'IconQuantumAddedRatio',\r\n    type:'quantum_dmg',\r\n    name:'量子屬性傷害提高',\r\n    percent:true\r\n},{\r\n    fieldName:'ImaginaryAddedRatio',\r\n    icon:'IconImaginaryAddedRatio',\r\n    type:'imaginary_dmg',\r\n    name:'虛數屬性傷害提高',\r\n    percent:true\r\n}];\r\n\r\nexport default AffixName;","import standard from '../data/standard';\r\nimport weight from '../data/weight';\r\nimport AffixName from '../data/AffixName';\r\nimport {findCombinations,EnchanceAllCombinations} from '../data/combination';\r\nimport { data } from 'react-router-dom';\r\n\r\n\r\nonmessage = function (event) {\r\n    //宣告變數\r\n    let SubData=event.data.SubData;\r\n    let partsIndex=parseInt(event.data.partsIndex);\r\n    let MainAffix=AffixName.find((a)=>a.name===event.data.MainData);\r\n    let deviation=(event.data.deviation!==undefined)?event.data.deviation:0;\r\n    \r\n\r\n    //計算可用強化次數\r\n    var enchanceCount=0;\r\n    SubData.forEach(sb=>{    \r\n        enchanceCount=enchanceCount+Number(sb.count);\r\n    });\r\n\r\n\r\n    //計算可能的強化組合\r\n    let combination=findCombinations(enchanceCount,SubData.filter((s)=>!s.locked).length);\r\n\r\n    //根據強化組合的個數，隨機抽取一個(這個數值已經是索引值)\r\n    let randomNum = Math.floor(Math.random() * combination.length);\r\n\r\n\r\n    let charStandard=calStand(event.data.standard);\r\n    //分數誤差 目前先預設少半個有效詞條\r\n\r\n    let coeEfficent=[];//當前遺器係數arr\r\n    SubData.forEach((sub)=>{\r\n        let SubAffixType=AffixName.find((s)=>s.name===sub.subaffix);\r\n        coeEfficent.push({\r\n            type:SubAffixType.type,\r\n            fieldName:SubAffixType.fieldName,\r\n            num:Number(charStandard[SubAffixType.type]),\r\n            locked:(sub.locked)?true:false\r\n        });\r\n    });\r\n\r\n    //將沒有被鎖住不可計算的詞條倒裝\r\n    //coeEfficent.sort((a,b)=>)\r\n\r\n    let MainData=charStandard[MainAffix.type];\r\n    let result = 0;\r\n    //先算原本的遺器的分數\r\n\r\n    let p1=new Promise(async (resolve,reject)=>{\r\n        \r\n        let randomCombination=combination[randomNum];\r\n\r\n        //獲得所有可能的強化幅度組合\r\n        let subcombination=EnchanceAllCombinations(randomCombination);\r\n\r\n        //獲取隨機一種強化幅度的組合\r\n        let randomNum2 =Math.floor(Math.random() * subcombination.length);\r\n\r\n        let ran_subcombination=subcombination[randomNum2];\r\n\r\n        let res=0;\r\n        if(partsIndex!==1&&partsIndex!==2)\r\n            res=3*MainData;\r\n        \r\n        \r\n        let caltype=[];//已經計算過的詞條種類\r\n\r\n        let newSubaffix=[];\r\n\r\n        ran_subcombination.forEach((el,i) => {//對每個屬性詞條開始進行模擬計算\r\n            let total=0;\r\n            let sub=coeEfficent[i];\r\n            \r\n            let targetRange=AffixName.find((st)=>st.fieldName===sub.fieldName).range;\r\n\r\n            //如果該詞條所獲得的強化次數為0 可以推測該數值為初始詞條數值 則直接繼承使用\r\n            if(SubData[i].count===0)\r\n                total=SubData[i].data;\r\n            else\r\n                total=targetRange[1];//詞條模擬出來的總和，初始為最中間的值\r\n            \r\n            el.forEach((num)=>total+=targetRange[num]);\r\n\r\n            //計算有效詞條數\r\n            let affixStandard=standard.find((t)=>t.type==='sub').data.find((d)=>d.name===sub.fieldName).data;\r\n            let cal=parseFloat(total/affixStandard).toFixed(2);\r\n\r\n            //獲得加權有效詞條數 並加上去\r\n            let affixmutl=parseFloat(charStandard[sub.type]*cal);\r\n            \r\n            \r\n            //如果沒有計算過此種類詞條\r\n            caltype.push({\r\n                type:sub.fieldName,\r\n                affixmutl:affixmutl\r\n            });\r\n            \r\n            newSubaffix.push({\r\n                index:newSubaffix.length,\r\n                subaffix:SubData[i].subaffix,\r\n                data:parseFloat(total.toFixed(1)),\r\n                count:randomCombination[i]\r\n            });\r\n            \r\n        });\r\n\r\n        caltype.forEach((ms)=>{\r\n            if(ms.type!=='AttackDelta'&&ms.type!=='DefenceDelta'&&ms.type!=='HPDelta')\r\n                res+=ms.affixmutl;\r\n        });\r\n        \r\n\r\n        //理想分數\r\n        let IdealyScore=Number((parseFloat(res/calPartWeights(charStandard,partsIndex))*100).toFixed(2));\r\n        result=IdealyScore;\r\n\r\n        resolve(newSubaffix);\r\n    })\r\n\r\n    p1.then((newSubaffix)=>{\r\n        //設立分數標準\r\n        let scoreStand=[\r\n            {rank:'S+',stand:85,color:'rgb(239, 68, 68)',tag:'S+'},\r\n            {rank:'S',stand:70,color:'rgb(239, 68, 68)',tag:'S'},\r\n            {rank:'A',stand:50,color:'rgb(234, 179, 8)',tag:'A'},\r\n            {rank:'B',stand:35,color:'rgb(234, 88 , 12)',tag:'B'},\r\n            {rank:'C',stand:15,color:'rgb(163, 230, 53)',tag:'C'},\r\n            {rank:'D',stand:0 ,color:'rgb(22,163,74)',tag:'D'}\r\n        ];\r\n        //標準排序顛倒\r\n        scoreStand.reverse();\r\n       \r\n        \r\n        let relicrank=undefined;\r\n        let match = true;\r\n        \r\n        //console.log(result);\r\n        //根據標準去分類\r\n        scoreStand.forEach((stand,i)=>{\r\n\r\n            //如果當前的分數超過目前的標準 則繼續往下找\r\n            if(result<stand.stand&&match&&i!==0){\r\n                match = false;\r\n                relicrank =scoreStand[i-1];\r\n            }\r\n\r\n            //如果目前分數超過最終標準\r\n            if(i===scoreStand.length-1&&match){\r\n                match = false ;\r\n                relicrank=scoreStand[i];\r\n            }\r\n           \r\n\r\n\r\n            //接著去找尋這個分數所屬的區間\r\n            if(stand.stand<=origin&&relicrank===undefined)\r\n                relicrank=stand;\r\n\r\n        });\r\n\r\n        this.postMessage({\r\n            relicscore:Number(result.toFixed(1)),//遺器分數\r\n            relicrank:relicrank,//遺器區間\r\n            returnData:newSubaffix //該次模擬強化後各項數據\r\n        })\r\n        \r\n    });\r\n};\r\n\r\n//計算裝備權重\r\nfunction calPartWeights(charstandard,partIndex){\r\n    let partWeight = 5;//起始分數為5\r\n    let mainkey='';\r\n   \r\n    //先將標準倒序\r\n    charstandard=Object.entries(charstandard)\r\n    .sort((a, b) => b[1] - a[1]);\r\n\r\n    //主詞條 抓最大*3 剩下依序遞補 最多四個\r\n    //頭跟手會跳過\r\n    if(partIndex!==1&&partIndex!==2){\r\n\r\n        charstandard.forEach(([key,value])=>{\r\n            let unique=!weight[partIndex].sub.includes(key);\r\n            //要優先計算只出現在主詞條的\r\n            if(weight[partIndex].main.includes(key)&&mainkey===''&&unique&&value!==0){\r\n                mainkey=key;\r\n                partWeight=partWeight+value*3;\r\n            }\r\n        });\r\n\r\n        if(mainkey===''){\r\n            charstandard.forEach(([key,value])=>{\r\n                if(weight[partIndex].main.includes(key)&&mainkey===''){\r\n                    mainkey=key;\r\n                    partWeight=partWeight+value*3;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n    //計算副詞條最大權重 最多計入四個\r\n    let calcount=0\r\n    charstandard.forEach(([key,value])=>{\r\n        if(key!==mainkey && calcount<4 && weight[partIndex].sub.includes(key)){\r\n            partWeight=partWeight+value;\r\n            calcount+=1;\r\n        }\r\n    });\r\n    return partWeight;\r\n}\r\n\r\n//製作標準\r\nfunction calStand(stand){\r\n\r\n    //設立一個模板 根據使用者填入參數更改\r\n    let model={\r\n        hp: 0,\r\n        atk: 0,\r\n        def: 0,\r\n        spd: 0,\r\n        crit_rate: 0,\r\n        crit_dmg: 0,\r\n        break_dmg: 0,\r\n        heal_rate: 0,\r\n        sp_rate: 0,\r\n        effect_hit: 0,\r\n        effect_res: 0,\r\n        physical_dmg: 0,\r\n        fire_dmg: 0,\r\n        ice_dmg: 0,\r\n        lightning_dmg: 0,\r\n        wind_dmg: 0,\r\n        quantum_dmg: 0,\r\n        imaginary_dmg: 0\r\n    };\r\n\r\n    //根據有效詞條關鍵字\r\n    stand.forEach((s)=>{\r\n        let target=AffixName.find((a)=>a.name===s.name).type;\r\n        model[target]=parseFloat(s.value);\r\n    });\r\n\r\n    return model;\r\n}\r\n\r\n//計算將會移置後台worker運作\r\n\r\n//所需資料\r\n//2.遺器本身數據(SubData) 3.遺器部位\r\n","//強化詞條種類組合\r\nexport function findCombinations(sum, length) {\r\n  const result = [];\r\n\r\n  function generateCombination(arr, currentSum, index) {\r\n    if (arr.length === length) {\r\n      if (currentSum === sum) {\r\n        result.push([...arr]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // 每個元素最少是 1，並且剩下的元素總和不能超過剩餘的 sum\r\n    for (let i = 0; i <= sum - currentSum ; i++) {\r\n      arr.push(i);\r\n      generateCombination(arr, currentSum + i, arr.length);\r\n      arr.pop();\r\n    }\r\n  }\r\n\r\n  generateCombination([], 0, 0);\r\n\r\n  return result;\r\n}\r\n\r\n// 測試\r\n//console.log(findCombinations(4, 9));\r\n\r\n//強化詞條數據種類\r\nexport  function EnchanceAllCombinations(enhanceCounts) {\r\n    const results = [];\r\n    const values = [0, 1, 2]; // 強化程度可能的值\r\n\r\n    function backtrack(index, currentCombination) {\r\n      // 如果所有詞條都已處理完成，保存結果\r\n      if (index === enhanceCounts.length) {\r\n        results.push([...currentCombination]);\r\n        return;\r\n      }\r\n\r\n      // 根據當前詞條的強化次數，生成所有可能的強化組合\r\n      const enhanceCount = enhanceCounts[index];\r\n      const possibleCombinations = [];\r\n\r\n      // 遍歷當前詞條的所有可能組合\r\n      function generateEnhanceValues(temp) {\r\n        if (temp.length === enhanceCount) {\r\n          possibleCombinations.push([...temp]);\r\n          return;\r\n        }\r\n        for (const value of values) {\r\n          temp.push(value);\r\n          generateEnhanceValues(temp);\r\n          temp.pop();\r\n        }\r\n      }\r\n\r\n      generateEnhanceValues([]);\r\n\r\n      // 對於當前詞條的每一種可能組合，繼續處理下一個詞條\r\n      for (const combination of possibleCombinations) {\r\n        currentCombination.push(combination);\r\n        backtrack(index + 1, currentCombination);\r\n        currentCombination.pop();\r\n      }\r\n    }\r\n\r\n    backtrack(0, []);\r\n    return results;\r\n}"],"names":["type","data","name","percent","main","sub","fieldName","icon","range","onmessage","event","SubData","partsIndex","parseInt","MainAffix","AffixName","find","a","MainData","undefined","deviation","enchanceCount","forEach","sb","Number","count","combination","sum","length","result","generateCombination","arr","currentSum","index","i","push","pop","findCombinations","filter","s","locked","randomNum","Math","floor","random","charStandard","stand","model","hp","atk","def","spd","crit_rate","crit_dmg","break_dmg","heal_rate","sp_rate","effect_hit","effect_res","physical_dmg","fire_dmg","ice_dmg","lightning_dmg","wind_dmg","quantum_dmg","imaginary_dmg","target","parseFloat","value","calStand","standard","coeEfficent","SubAffixType","subaffix","num","p1","Promise","async","resolve","reject","randomCombination","subcombination","enhanceCounts","results","values","backtrack","currentCombination","enhanceCount","possibleCombinations","generateEnhanceValues","temp","EnchanceAllCombinations","ran_subcombination","res","caltype","newSubaffix","el","total","targetRange","st","affixStandard","t","d","cal","toFixed","affixmutl","ms","IdealyScore","charstandard","partIndex","partWeight","mainkey","Object","entries","sort","b","_ref","key","unique","weight","includes","_ref2","calcount","_ref3","calPartWeights","then","relicrank","scoreStand","rank","color","tag","reverse","match","origin","this","postMessage","relicscore","returnData"],"sourceRoot":""}